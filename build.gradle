apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'application'

group 'com.thoughtworks.sati'
version '0.0.1'

buildscript {
  repositories {
    maven {
      name 'JFrog OSS snapshot repo'
      url 'https://oss.jfrog.org/oss-snapshot-local/'
    }
    jcenter()
  }
  dependencies {
    classpath 'me.champeau.gradle:antlr4-gradle-plugin:0.1.1-SNAPSHOT'
  }
}

apply plugin: 'me.champeau.gradle.antlr4'

repositories {
  mavenLocal()
  jcenter()
}

configurations {
  console
  mainClassName = "com.thoughtworks.kase.Main"
  apiTestCompile.extendsFrom runtime
}

sourceSets {
  main {
    java {
      srcDirs += antlr4.output
    }
  }
  apiTest {
    java {
      srcDir 'src/api-test/java'
    }
    resources {
      srcDir 'src/api-test/resources'
    }
    compileClasspath += sourceSets.main.runtimeClasspath
  }
}

run{
  standardInput = System.in
}

dependencies {
  apiTestCompile 'com.jayway.jsonpath:json-path-assert:0.9.0'
  apiTestCompile 'org.springframework.boot:spring-boot-starter-test:1.1.8.RELEASE'
  compile('com.thoughtworks.sati:languages:0.0.1') {
    changing=true
  }
  compile 'org.projectlombok:lombok:1.16.4'
  compile 'org.antlr:antlr4:4.5'
  compile 'com.google.guava:guava:18.0'
  compile 'com.google.inject:guice:4.0'
  compile 'com.google.inject.extensions:guice-multibindings:4.0'
}

antlr4 {
  source = file('src/main/antlr')
  output = file('src/main/java/com/thoughtworks/kase/antlr')
  listener = false
  visitor = true
  extraArgs = ['-package', 'com.thoughtworks.kase.antlr']
}

task apiTest(type: Test) {
  testLogging {
    events "passed", "skipped", "failed", "standardOut", "standardError"
    exceptionFormat "full"
    showStandardStreams = true
  }

  testClassesDir = sourceSets.apiTest.output.classesDir
  classpath += sourceSets.apiTest.runtimeClasspath
}

task(console, dependsOn: 'classes') << {
  def classpath = sourceSets.main.runtimeClasspath + configurations.console

  def command = [
      'java',
      '-cp', classpath.collect().join(System.getProperty('path.separator')),
      'com.thoughtworks.kase.Main'
  ]

  def proc = new ProcessBuilder(command)
      .redirectOutput(ProcessBuilder.Redirect.INHERIT)
      .redirectInput(ProcessBuilder.Redirect.INHERIT)
      .redirectError(ProcessBuilder.Redirect.INHERIT)
      .start()

  proc.waitFor()

  if (0 != proc.exitValue()) {
    throw new RuntimeException("console exited with status: ${proc.exitValue()}")
  }
}

idea {
  module {
    testSourceDirs += file('src/api-test/java')
    testSourceDirs += file('src/api-test/resources')
  }
}

compileJava.dependsOn antlr4
